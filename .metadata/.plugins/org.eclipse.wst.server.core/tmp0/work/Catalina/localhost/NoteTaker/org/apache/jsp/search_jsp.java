/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.43
 * Generated at: 2025-10-05 10:48:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.hibernate.query.Query;
import org.hibernate.SessionFactory;
import org.hibernate.Session;
import com.helper.*;
import java.util.*;
import com.entities.Notes;
import java.text.SimpleDateFormat;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1759655546431L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("com.helper");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("org.hibernate.query.Query");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.hibernate.Session");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.entities.Notes");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("   <!-- Bootstrap CSS -->\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n");
      out.write("<title>SEARCH RESULT</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	 <div class=\"navContainer\">\r\n");
      out.write("   		");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<title>NAVBAR</title>\r\n");
      out.write("\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"./css/navbar.css\">\r\n");
      out.write(" <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write(" <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write(" <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <header class=\"site-header\">\r\n");
      out.write("    <nav class=\"navbar\" aria-label=\"Main navigation\">\r\n");
      out.write("      <span class=\"brand\" aria-label=\"Flowbite home\">\r\n");
      out.write("        <img class=\"brand-logo\" src=\"media/sticky-notes.png\" alt=\"Note Taker logo\" />\r\n");
      out.write("        <span class=\"brand-text\">NOTE TAKER</span>\r\n");
      out.write("      </span>\r\n");
      out.write("\r\n");
      out.write("      <button class=\"menu-toggle\" aria-label=\"Open menu\" aria-expanded=\"false\" aria-controls=\"mobile-menu\">\r\n");
      out.write("        <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\">\r\n");
      out.write("          <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\r\n");
      out.write("          <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\r\n");
      out.write("          <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\r\n");
      out.write("        </svg>\r\n");
      out.write("      </button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <ul class=\"nav-links\" role=\"list\">\r\n");
      out.write("        <li><a class=\"nav-link active\" href=\"index.jsp\">HOME</a></li>\r\n");
      out.write("        <li><a class=\"nav-link\" href=\"addnotes.jsp\">ADD NOTE</a></li>\r\n");
      out.write("        <li><a class=\"nav-link\" href=\"allnotes.jsp\">SHOW NOTES</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <form class=\"search\" role=\"search\" aria-label=\"Site\" action=\"search.jsp\">\r\n");
      out.write("        <span class=\"search-icon\" aria-hidden=\"true\">\r\n");
      out.write("          <svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\">\r\n");
      out.write("            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n");
      out.write("            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n");
      out.write("          </svg>\r\n");
      out.write("        </span>\r\n");
      out.write("        <input class=\"search-input\" type=\"search\" placeholder=\"Search by title...\" aria-label=\"Search\" name=\"title\" />\r\n");
      out.write("      </form>\r\n");
      out.write("    </nav>\r\n");
      out.write("  </header>\r\n");
      out.write("  <ul id=\"mobile-menu\" class=\"mobile-menu\" role=\"list\" hidden>\r\n");
      out.write("    <li><a class=\"nav-link active\" href=\"#\">HOME</a></li>\r\n");
      out.write("    <li><a class=\"nav-link\" href=\"#about\">ADD NOTE</a></li>\r\n");
      out.write("    <li><a class=\"nav-link\" href=\"#services\">SHOW NOTES</a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("  <script>\r\n");
      out.write("  (function(){\r\n");
      out.write("    var toggle = document.querySelector('.menu-toggle');\r\n");
      out.write("    var menu = document.getElementById('mobile-menu');\r\n");
      out.write("    if(!toggle || !menu) return;\r\n");
      out.write("    toggle.addEventListener('click', function(){\r\n");
      out.write("      var isOpen = toggle.getAttribute('aria-expanded') === 'true';\r\n");
      out.write("      toggle.setAttribute('aria-expanded', String(!isOpen));\r\n");
      out.write("      menu.hidden = isOpen;\r\n");
      out.write("    });\r\n");
      out.write("    // Close menu when clicking a link\r\n");
      out.write("    menu.addEventListener('click', function(e){\r\n");
      out.write("      var target = e.target;\r\n");
      out.write("      if(target && target.tagName === 'A'){\r\n");
      out.write("        toggle.setAttribute('aria-expanded','false');\r\n");
      out.write("        menu.hidden = true;\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  })();\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   	</div> \r\n");
      out.write("   	");

   	
   		String title = request.getParameter("title").trim();
   		String titleUC = title.toUpperCase();
   		String titleLC = title.toLowerCase();
   		// CHECKPOINT
   		// System.out.println(title);
   		
   		Session s =FactoryProvider.getFactory().openSession();
   		Query q= s.createQuery("FROM Notes n WHERE n.title LIKE:searchPatternUpper OR n.title LIKE:searchPatternLower",Notes.class);
   		q.setParameter("searchPatternUpper", "%"+titleUC+"%");
   		q.setParameter("searchPatternLower", "%"+titleLC+"%");
   		
   		List<Notes> list = q.list();
   		
   		
   		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
   		
   		
   		for(Notes note: list) 	{
   			
   			String dateString= dateFormat.format(note.getCreateDate());
   		
      out.write("\r\n");
      out.write("   			\r\n");
      out.write("   	\r\n");
      out.write("   	<div style=\"\r\n");
      out.write("        width: 100rem;\r\n");
      out.write("        background: #1A202C;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        padding: 25px;\r\n");
      out.write("        margin: 50px auto;\r\n");
      out.write("        font-family: 'Arial', sans-serif;\r\n");
      out.write("        color: white;\r\n");
      out.write("        transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("    \" onmouseover=\"this.style.transform='translateY(-5px)'; this.style.boxShadow='0 15px 40px rgba(0, 0, 0, 0.3)'\" onmouseout=\"this.style.transform='translateY(0)'; this.style.boxShadow='0 10px 30px rgba(0, 0, 0, 0.2)'\">\r\n");
      out.write("        \r\n");
      out.write("        <!-- Card Heading -->\r\n");
      out.write("        <h2 style=\"\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin: 0 0 15px 0;\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #FFFFFF;\r\n");
      out.write("            line-height: 1.3;\r\n");
      out.write("        \">");
      out.print( note.getTitle());
      out.write("</h2>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Content Paragraph -->\r\n");
      out.write("        <p style=\"\r\n");
      out.write("            margin: 0 0 25px 0;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            color: rgba(255, 255, 255, 0.8);\r\n");
      out.write("            line-height: 1.5;\r\n");
      out.write("            font-weight: normal;\r\n");
      out.write("        \">");
      out.print( note.getContent());
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("        <!-- Action Buttons -->\r\n");
      out.write("        <div style=\"\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            justify-content: flex-start;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        \">\r\n");
      out.write("            <button title=\"EDIT\" style=\"\r\n");
      out.write("                width: 40px;\r\n");
      out.write("                height: 40px;\r\n");
      out.write("                padding: 0;\r\n");
      out.write("                background: rgba(255, 255, 255, 0.2);\r\n");
      out.write("                border: 2px solid rgba(255, 255, 255, 0.3);\r\n");
      out.write("                border-radius: 50%;\r\n");
      out.write("                color: white;\r\n");
      out.write("                font-size: 16px;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("                transition: all 0.3s ease;\r\n");
      out.write("                display: flex;\r\n");
      out.write("                align-items: center;\r\n");
      out.write("                justify-content: center;\r\n");
      out.write("            \" onmouseover=\"this.style.background='rgba(255, 255, 255, 0.3)'; this.style.borderColor='rgba(255, 255, 255, 0.5)'\" onmouseout=\"this.style.background='rgba(255, 255, 255, 0.2)'; this.style.borderColor='rgba(255, 255, 255, 0.3)'\">\r\n");
      out.write("               \r\n");
      out.write("               <a href=\"editform.jsp?note_id=");
      out.print(note.getId());
      out.write("\" style=\"text-decoration: none; color: inherit;\">✏️</a> \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("            </button>\r\n");
      out.write("            \r\n");
      out.write("            <button title=\"DELETE\" style=\"\r\n");
      out.write("                width: 40px;\r\n");
      out.write("                height: 40px;\r\n");
      out.write("                padding: 0;\r\n");
      out.write("                background: rgba(255, 255, 255, 0.2);\r\n");
      out.write("                border: 2px solid rgba(255, 255, 255, 0.3);\r\n");
      out.write("                border-radius: 50%;\r\n");
      out.write("                color: white;\r\n");
      out.write("                font-size: 16px;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("                transition: all 0.3s ease;\r\n");
      out.write("                display: flex;\r\n");
      out.write("                align-items: center;\r\n");
      out.write("                justify-content: center;\r\n");
      out.write("            \" onmouseover=\"this.style.background='rgba(255, 255, 255, 0.3)'; this.style.borderColor='rgba(255, 255, 255, 0.5)'\" onmouseout=\"this.style.background='rgba(255, 255, 255, 0.2)'; this.style.borderColor='rgba(255, 255, 255, 0.3)'\">\r\n");
      out.write("            <a href=\"DeleteServlet?note_id=");
      out.print(note.getId());
      out.write("\" style=\"text-decoration: none; color: inherit;\">🗑️</a>\r\n");
      out.write("            </button>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Timestamp -->\r\n");
      out.write("        <div style=\"\r\n");
      out.write("            text-align: right;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            color: rgba(255, 255, 255, 0.6);\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("        \">");
      out.print( dateString);
      out.write("</div>\r\n");
      out.write("    </div>\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("    \r\n");
      out.write("    ");
	
   		}
   		
		s.close();
   	
      out.write("\r\n");
      out.write("   	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
